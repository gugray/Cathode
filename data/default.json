{
  "gist": "// Sine SDF by blackle: https://www.shadertoy.com/view/3lSyDG\n// Though ended up not using it here\n#define PI 3.141592653\n\n// Intensity of faux sine SDF at coordinate\nfloat ifs(vec2 p, float amp, float freq, float ofs) {\n    float s = amp * sin(p.x * freq + ofs);\n    float d = abs(p.y - s);\n    return 1.0 - smoothstep(0.0015, 0.02, d);\n}\n\nvoid main() {\n    vec2 uv = (gl_FragCoord.xy / resolution.xy) * 2.0 - 1.0;\n    vec2 p = uv;\n    p.x *= resolution.x/resolution.y;\n    \n    vec4 v0 = texelFetch(txData, ivec2(0, 0), 0);\n    float t0 = v0[0];\n\n    float in1, in2, in3, in4;\n    \n    float amp1 = (sin(time * 0.001) * 0.3 + 0.5) * knob1 * 0.01;\n    float freq1 = (sin(t0 * 0.001) + 2.0) * PI * 0.5;\n    // float freq1 = (sin(time * knob0 * 0.0001) + 2.0) * PI * 0.5;\n    float ofs1 = (sin(time * 0.0007) + 2.0) * PI * 0.5;\n    in1 = ifs(p + vec2(0.0, -0.4), amp1, freq1, ofs1);\n\n    float amp2 = sin(time * 0.000757) * 0.7;\n    float freq2 = (sin(time * 0.0009546) + 2.0) * PI * 0.5;\n    float ofs2 = (sin(time * 0.001057) + 2.0) * PI * 0.5;\n    in2 = ifs(p + vec2(0.0, 0.4), amp2, freq2, ofs2);\n    \n    vec3 clr;\n    clr += in1 * vec3(1.0, 0.4, 0.0);\n    clr += in2 * vec3(0.3, 0.7, 0.6);\n    \n    vec3 clrClip0 = txFetchUV(txClip0, p);\n    vec3 clrPrev = txFetchUV(txPrev, p);\n    clrPrev = clrPrev * 0.999 - vec3(0.002);\n    clr = clrPrev + clr * 0.05;\n\n    \n    // vec3 clrMix = mix(clrPrev, clr * 2.0, 0.05);\n    // clr = mix(clr, clrClip0, length(clr) * 0.5) + 0.05 * pow(clrClip0, vec3(4.0));\n    // // clr = pow(clr, vec3(0.99));\n    // clr = vec3(0);\n    \n    outColor = vec4(clr.rgb, 1.0);\n}\n"
}